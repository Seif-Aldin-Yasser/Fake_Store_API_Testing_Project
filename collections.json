{
	"info": {
		"_postman_id": "551b7eb9-c3a8-483c-b099-bad77549a98a",
		"name": "Fake API Store API Testing Project",
		"description": "This Project Created By Seif Aldin Yasser.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45807489",
		"_collection_link": "https://seifaldinyasser.postman.co/workspace/Seif-Aldin-Yasser's-Workspace~d44ca30a-a128-4a81-80b3-d9a3922ac13f/collection/45807489-551b7eb9-c3a8-483c-b099-bad77549a98a?action=share&source=collection_link&creator=45807489"
	},
	"item": [
		{
			"name": "Positive Endpoints",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Get All Existed Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Can Get All Existed Users with a Status Code of 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with Valid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonFile = pm.response.json();\r",
											"\r",
											"var token= jsonFile.token;\r",
											"\r",
											"pm.environment.set(\"token\", token);\r",
											"\r",
											"pm.test(\"Verify that Can Login with Valid Credentials and Receive a token, with a Status Code of 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"johnd\",\r\n    \"password\": \"m38rmF$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"description": "Login to Get Token."
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Get All Existed Products",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Can Get All Existed Products with a Status Code of 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/products",
									"host": [
										"{{url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a New Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonFile = pm.response.json();\r",
											"\r",
											"var productID = jsonFile.id;\r",
											"\r",
											"pm.environment.set(\"productID\", productID);\r",
											"\r",
											"pm.test(\"Verify that Can Add New Product with Status Code 0f 200.\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Response Body Contains the Correct Data with Status Code of 200.\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(21);\r",
											"    pm.expect(jsonData.title).to.eql(\"test\");\r",
											"    pm.expect(jsonData.price).to.eql(200);\r",
											"    pm.expect(jsonData.description).to.eql(\"testdata\");\r",
											"    pm.expect(jsonData.category).to.eql(\"testcategory\");\r",
											"    pm.expect(jsonData.image).to.eql(\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"id\": 21,\r\n        \"title\": \"test\",\r\n        \"price\": 200,\r\n        \"description\": \"testdata\",\r\n        \"category\": \"testcategory\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n     \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products",
									"host": [
										"{{url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product By New ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify That a New ID (21) is Existed with a Status Code 200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(21);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/products/{{productID}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"{{productID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product By Existed ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify That ID (1) is Existed with a Status Code 200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Can Get a Specified Product by Existed ID (1) with a Status Code of 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/products/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Existed Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Can Update a Existed Product with Status Code 0f 200.\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Response Body Contains the Correct Updated Data with Status Code of 200.\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.title).to.eql(\"Laptop 2025\");\r",
											"    pm.expect(jsonData.price).to.eql(200);\r",
											"    pm.expect(jsonData.description).to.eql(\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\");\r",
											"    pm.expect(jsonData.category).to.eql(\"men's clothing\");\r",
											"    pm.expect(jsonData.image).to.eql(\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\");\r",
											"});\r",
											"    \r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"title\": \"Laptop 2025\",\r\n        \"price\": 200,\r\n        \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n        \"category\": \"men's clothing\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Updated Product By Existed ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify That ID (1) is Existed with a Status Code 200\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify that Response Body Contains the Correct Updated Data with Status Code of 200.\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.title).to.eql(\"Labtop 2025\");\r",
											"    pm.expect(jsonData.price).to.eql(200);\r",
											"    pm.expect(jsonData.description).to.eql(\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\");\r",
											"    pm.expect(jsonData.category).to.eql(\"men's clothing\");\r",
											"    pm.expect(jsonData.image).to.eql(\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/products/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Existed Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Can Delete Existed Product with Status Code of 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Laptop 2025\",\r\n        \"price\": 200,\r\n        \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n        \"category\": \"men's clothing\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"1"
									]
								}
							},
							"response": []
						}
					],
					"description": "Apply REST API Methods on Fake API Store (Products).\n\nCreate Positive API Test Cases."
				}
			],
			"description": "Apply REST API Methods on Fake API Store.\n\nCreate Positive API Test Cases."
		},
		{
			"name": "Negative Endpoints",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Login with Empty Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Login with Empty Username and Get 401 Status Code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \" \",\r\n    \"password\": \"m38rmF$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with Invalid Username",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Login with Invalid Username and Get 401 Status Code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"m38rmF$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with Empty Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Login with Empty Password and Get 401 Status Code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"johnd\",\r\n    \"password\": \" \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login with Invalid Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Login with Invalid Password and Get 401 Status Code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"johnd\",\r\n    \"password\": \"test1234$\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"description": "Create N"
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Get Product By Not Existed ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Get a Specified Product by Not Existed ID (2000) with a Status Code of 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/products/2000",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"2000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a New Product with Missing Values",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Add New Product with Missing Values and Status Code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"id\": 21,\r\n        \"title\": \"test\",\r\n        \"price\": 200,\r\n        \"description\": \"testdata\",\r\n        \"category\": \"testcategory\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n     \r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products",
									"host": [
										"{{url}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Non Existed Product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Update a Non Existed Product with Status Code 0f 404.\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"title\": \"Mobile 2025\",\r\n        \"price\": 123,\r\n        \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n        \"category\": \"men's clothing\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products/2000",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"2000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a Product Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify that Cannot Delete Non Existed Product with Status Code of 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n    {\r\n        \"id\": 1,\r\n        \"title\": \"Laptop 2025\",\r\n        \"price\": 200,\r\n        \"description\": \"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n        \"category\": \"men's clothing\",\r\n        \"image\": \"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/products/2000",
									"host": [
										"{{url}}"
									],
									"path": [
										"products",
										"2000"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Create Negative API Test Cases."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}